name: CI/CD for Express.js Backend

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    # Define steps for the CI job
    steps:
      # 1. Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"

      # 3. Cache node_modules to speed up installs
      - name: Cache npm modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # 4. Install dependencies
      - name: Install dependencies
        run: npm ci

      # # 5. Run tests (e.g., using Mocha or Jest)
      # - name: Run tests
      #   run: npm test

  # Optional: Deployment step
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # # 2. Install Render
      # - name: Install Render CLI
      #   run: npm install -g @render/cli

      # - name: Install Render CLI
      #   run: curl -fsSL https://render.com/download/render-cli | sh

      # 3. Deploy to Render
      - name: Deploy to Render
        # run: render deploy --service-id ${{ secrets.RENDER_SERVICE_ID }} --branch master
        # env:
        #   RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        # run: |
        #   curl -X POST https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys \
        #   -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}"
        uses: qdatn/StylistProject_Backend
        env:
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }} # Set your Render service ID as a secret
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }} # Set your Render API key as a secret
